思路1：
采用动态规划算法，将问题分解成子问题，起点到点(i, j)的路径总数：ways[i][j] = 起点到点(i, j-1)的总数：ways[i][j-1] + 起点到点(i-1, j)总数：ways[i-1][j]。于是得到递推关系式：ways[i][j] = ways[i][j-1] + ways[i-1][j]


保存了子问题的解，时间大大缩减
只不过要注意一点的是：设有障碍的点的path为0. 特别是注意最小子问题的解，即最有一行或一列，当一行中某个点设有障碍，其后面的点的解均为0.某一列情况类似。