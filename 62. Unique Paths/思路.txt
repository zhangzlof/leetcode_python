思路1：
可以采用深度优先搜索算法（dfs），但是timing limit，超时
思路2：
采用动态规划算法，将问题分解成子问题，起点到点(i, j)的路径总数：ways[i][j] = 起点到点(i, j-1)的总数：ways[i][j-1] + 起点到点(i-1, j)总数：ways[i-1][j]。于是得到递推关系式：ways[i][j] = ways[i][j-1] + ways[i-1][j]


保存了子问题的解，时间大大缩减
